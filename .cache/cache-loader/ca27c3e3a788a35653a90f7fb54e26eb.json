{"remainingRequest":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js??ref--16-1!D:\\Code\\pokemon\\src\\PokemonContainer\\PokemonContainer.tsx","dependencies":[{"path":"D:\\Code\\pokemon\\src\\PokemonContainer\\PokemonContainer.tsx","mtime":1575431370873},{"path":"D:\\Code\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575395801878},{"path":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js","mtime":1550204131511}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { PokemonCard } from '../PokemonCard';\r\nimport { PokemonPopup } from '../PokemonPopup';\r\nvar Container = styled.main(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\\n  grid-gap: 25px;\\n  margin-top: 75px;\\n\"], [\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\\n  grid-gap: 25px;\\n  margin-top: 75px;\\n\"])));\r\nexport var PokemonContainer = function (_a) {\r\n    var pokemons = _a.pokemons;\r\n    var _b = React.useState(null), activePokemon = _b[0], setActivePokemon = _b[1];\r\n    return (React.createElement(Container, null,\r\n        pokemons.map(function (pokemon) { return (React.createElement(PokemonCard, { key: pokemon.id, pokemon: pokemon, onInfoClick: setActivePokemon })); }),\r\n        activePokemon && React.createElement(PokemonPopup, { pokemon: activePokemon, onClose: function () { return setActivePokemon(null); } })));\r\n};\r\nvar templateObject_1;\r\n",{"version":3,"file":"D:\\Code\\pokemon\\src\\PokemonContainer\\PokemonContainer.tsx","sourceRoot":"","sources":["D:\\Code\\pokemon\\src\\PokemonContainer\\PokemonContainer.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,MAAM,MAAM,mBAAmB,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AA0C/C,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,kMAAA,+HAK5B,IAAA,CAAC;AAMF,MAAM,CAAC,IAAM,gBAAgB,GAAoC,UAAC,EAAY;QAAV,sBAAQ;IACpE,IAAA,yBAAiE,EAAhE,qBAAa,EAAE,wBAAiD,CAAC;IAExE,OAAO,CACL,oBAAC,SAAS;QACP,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAgB,IAAK,OAAA,CAClC,oBAAC,WAAW,IAAC,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,gBAAgB,GAAI,CAClF,EAFmC,CAEnC,CAAC;QACD,aAAa,IAAI,oBAAC,YAAY,IAAC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,cAAM,OAAA,gBAAgB,CAAC,IAAI,CAAC,EAAtB,CAAsB,GAAI,CACvF,CACb,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { PokemonCard } from '../PokemonCard';\r\nimport { PokemonPopup } from '../PokemonPopup';\r\n\r\ninterface PokemonDimension {\r\n  minimum: string;\r\n  maximum: string;\r\n}\r\n\r\nexport interface Attack {\r\n  name: string;\r\n  type: string;\r\n  damage: number;\r\n}\r\n\r\ninterface PokemonAttack {\r\n  fast: Attack[];\r\n  special: Attack[];\r\n}\r\n\r\ninterface PokemonEvolutionRequirement {\r\n  amount: number;\r\n  name: string;\r\n}\r\n\r\nexport interface Pokemon {\r\n  id: string;\r\n  number: string;\r\n  name: string;\r\n  weight: PokemonDimension;\r\n  height: PokemonDimension;\r\n  classification: string;\r\n  types: string[];\r\n  resistant: string[];\r\n  attacks: PokemonAttack;\r\n  weaknesses: string[];\r\n  fleeRate: number;\r\n  maxCP: number;\r\n  evolutions: Pokemon[];\r\n  evolutionRequirements: PokemonEvolutionRequirement;\r\n  maxHP: number;\r\n  image: string;\r\n}\r\n\r\nconst Container = styled.main`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 25px;\r\n  margin-top: 75px;\r\n`;\r\n\r\ninterface PokemonContainerProps {\r\n  pokemons: Pokemon[];\r\n}\r\n\r\nexport const PokemonContainer: React.FC<PokemonContainerProps> = ({ pokemons }) => {\r\n  const [activePokemon, setActivePokemon] = React.useState<Pokemon>(null);\r\n\r\n  return (\r\n    <Container>\r\n      {pokemons.map((pokemon: Pokemon) => (\r\n        <PokemonCard key={pokemon.id} pokemon={pokemon} onInfoClick={setActivePokemon} />\r\n      ))}\r\n      {activePokemon && <PokemonPopup pokemon={activePokemon} onClose={() => setActivePokemon(null)} />}\r\n    </Container>\r\n  );\r\n};\r\n"]}]}