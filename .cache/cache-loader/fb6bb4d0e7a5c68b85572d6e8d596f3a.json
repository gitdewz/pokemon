{"remainingRequest":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js??ref--16-1!D:\\Code\\pokemon\\src\\App.tsx","dependencies":[{"path":"D:\\Code\\pokemon\\src\\App.tsx","mtime":1575421372835},{"path":"D:\\Code\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575395801878},{"path":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js","mtime":1550204131511}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport * as React from 'react';\r\nimport { CircleLoader } from './CircleLoader';\r\nimport { PokemonContainer } from './PokemonContainer';\r\nimport { SearchBar } from './SearchBar';\r\nvar GET_POKEMON = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  query getPokemon($first: Int!) {\\n    pokemons(first: $first) {\\n      id\\n      number\\n      name\\n      weight {\\n        minimum\\n        maximum\\n      }\\n      height {\\n        minimum\\n        maximum\\n      }\\n      classification\\n      types\\n      resistant\\n      attacks {\\n        fast {\\n          name\\n          type\\n          damage\\n        }\\n        special {\\n          name\\n          type\\n          damage\\n        }\\n      }\\n      weaknesses\\n      fleeRate\\n      maxCP\\n      evolutions {\\n        name\\n      }\\n      evolutionRequirements {\\n        amount\\n        name\\n      }\\n      maxHP\\n      image\\n    }\\n  }\\n\"], [\"\\n  query getPokemon($first: Int!) {\\n    pokemons(first: $first) {\\n      id\\n      number\\n      name\\n      weight {\\n        minimum\\n        maximum\\n      }\\n      height {\\n        minimum\\n        maximum\\n      }\\n      classification\\n      types\\n      resistant\\n      attacks {\\n        fast {\\n          name\\n          type\\n          damage\\n        }\\n        special {\\n          name\\n          type\\n          damage\\n        }\\n      }\\n      weaknesses\\n      fleeRate\\n      maxCP\\n      evolutions {\\n        name\\n      }\\n      evolutionRequirements {\\n        amount\\n        name\\n      }\\n      maxHP\\n      image\\n    }\\n  }\\n\"])));\r\nvar App = function () {\r\n    var _a = React.useState([]), pokemons = _a[0], setPokemons = _a[1];\r\n    var _b = useQuery(GET_POKEMON, { variables: { first: 151 } }), loading = _b.loading, error = _b.error, data = _b.data;\r\n    React.useEffect(function () {\r\n        if (data) {\r\n            setPokemons(data.pokemons);\r\n        }\r\n    }, [data]);\r\n    if (loading || pokemons.length === 0) {\r\n        return React.createElement(CircleLoader, null);\r\n    }\r\n    if (error) {\r\n        return React.createElement(\"div\", null, error.message);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(PokemonContainer, { pokemons: pokemons }),\r\n        React.createElement(SearchBar, { pokemons: data.pokemons })));\r\n};\r\nexport default App;\r\nvar templateObject_1;\r\n",{"version":3,"file":"D:\\Code\\pokemon\\src\\App.tsx","sourceRoot":"","sources":["D:\\Code\\pokemon\\src\\App.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;AACnC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAW,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAGxC,IAAM,WAAW,GAAG,GAAG,qtBAAA,kpBA2CtB,IAAA,CAAC;AAEF,IAAM,GAAG,GAAG;IACJ,IAAA,uBAAuD,EAAtD,gBAAQ,EAAE,mBAA4C,CAAC;IACxD,IAAA,yDAA+E,EAA7E,oBAAO,EAAE,gBAAK,EAAE,cAA6D,CAAC;IAEtF,KAAK,CAAC,SAAS,CAAC;QACd,IAAI,IAAI,EAAE;YACR,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEX,IAAI,OAAO,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QACpC,OAAO,oBAAC,YAAY,OAAG,CAAC;KACzB;IAED,IAAI,KAAK,EAAE;QACT,OAAO,iCAAM,KAAK,CAAC,OAAO,CAAO,CAAC;KACnC;IAED,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;QACb,oBAAC,gBAAgB,IAAC,QAAQ,EAAE,QAAQ,GAAI;QACxC,oBAAC,SAAS,IAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAI,CACvB,CAClB,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,GAAG,CAAC","sourcesContent":["import { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport * as React from 'react';\nimport { CircleLoader } from './CircleLoader';\nimport { Pokemon, PokemonContainer } from './PokemonContainer';\nimport { SearchBar } from './SearchBar';\nimport * as css from \"./App.css\";\n\nconst GET_POKEMON = gql`\n  query getPokemon($first: Int!) {\n    pokemons(first: $first) {\n      id\n      number\n      name\n      weight {\n        minimum\n        maximum\n      }\n      height {\n        minimum\n        maximum\n      }\n      classification\n      types\n      resistant\n      attacks {\n        fast {\n          name\n          type\n          damage\n        }\n        special {\n          name\n          type\n          damage\n        }\n      }\n      weaknesses\n      fleeRate\n      maxCP\n      evolutions {\n        name\n      }\n      evolutionRequirements {\n        amount\n        name\n      }\n      maxHP\n      image\n    }\n  }\n`;\n\nconst App = () => {\n  const [pokemons, setPokemons] = React.useState<Pokemon[]>([]);\n  const { loading, error, data } = useQuery(GET_POKEMON, { variables: { first: 151 } });\n\n  React.useEffect(() => {\n    if (data) {\n      setPokemons(data.pokemons);\n    }\n  }, [data]);\n\n  if (loading || pokemons.length === 0) {\n    return <CircleLoader />;\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  return (\n    <React.Fragment>\n      <PokemonContainer pokemons={pokemons} />\n      <SearchBar pokemons={data.pokemons} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]}]}