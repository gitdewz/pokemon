{"remainingRequest":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js??ref--16-1!D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx","dependencies":[{"path":"D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx","mtime":1575445239981},{"path":"D:\\Code\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575395801878},{"path":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js","mtime":1550204131511}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nvar Header = styled.header(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  position: fixed;\\n  top: 0;\\n  width: 100vw;\\n  background-color: #ffde00;\\n  height: 70px;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n\"], [\"\\n  position: fixed;\\n  top: 0;\\n  width: 100vw;\\n  background-color: #ffde00;\\n  height: 70px;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n\"])));\r\nvar Logo = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  position: absolute;\\n  height: 70px;\\n  left: 15px;\\n  display: flex;\\n  align-items: center;\\n\"], [\"\\n  position: absolute;\\n  height: 70px;\\n  left: 15px;\\n  display: flex;\\n  align-items: center;\\n\"])));\r\nvar LogoImage = styled.img(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  height: 60px;\\n  width: 60px;\\n\"], [\"\\n  height: 60px;\\n  width: 60px;\\n\"])));\r\nvar LogoText = styled.span(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  font-family: 'Proza sans-serif';\\n  font-weight: bold;\\n  font-size: 40px;\\n  padding: 0 5px;\\n\\n  @media (max-width: 600px) {\\n    display: none;\\n  }\\n\"], [\"\\n  font-family: 'Proza sans-serif';\\n  font-weight: bold;\\n  font-size: 40px;\\n  padding: 0 5px;\\n\\n  @media (max-width: 600px) {\\n    display: none;\\n  }\\n\"])));\r\nvar FilterContainer = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  display: flex;\\n  position: absolute;\\n  right: 25px;\\n\\n  @media (max-width: 1300px) {\\n    display: none;\\n  }\\n\"], [\"\\n  display: flex;\\n  position: absolute;\\n  right: 25px;\\n\\n  @media (max-width: 1300px) {\\n    display: none;\\n  }\\n\"])));\r\nvar Filter = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  margin-left: 15px;\\n  display: flex;\\n\\n  @media (max-width: 1300px) {\\n    display: grid;\\n    grid-template-columns: minmax(80px, 120px) minmax(100px, 300px);\\n    grid-gap: 10px;\\n    margin: 5px;\\n  }\\n\"], [\"\\n  margin-left: 15px;\\n  display: flex;\\n\\n  @media (max-width: 1300px) {\\n    display: grid;\\n    grid-template-columns: minmax(80px, 120px) minmax(100px, 300px);\\n    grid-gap: 10px;\\n    margin: 5px;\\n  }\\n\"])));\r\nvar FilterLabel = styled.label(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n  font-weight: bold;\\n  font-size: 20px;\\n  padding: 5px;\\n\"], [\"\\n  font-weight: bold;\\n  font-size: 20px;\\n  padding: 5px;\\n\"])));\r\nvar MobileFilterToggle = styled.img(templateObject_8 || (templateObject_8 = __makeTemplateObject([\"\\n  display: none;\\n  position: absolute;\\n  top: 10px;\\n  right: 25px;\\n  height: 50px;\\n  width: 50px;\\n  pointer: cursor;\\n\\n  @media (max-width: 1300px) {\\n    display: block;\\n  }\\n\"], [\"\\n  display: none;\\n  position: absolute;\\n  top: 10px;\\n  right: 25px;\\n  height: 50px;\\n  width: 50px;\\n  pointer: cursor;\\n\\n  @media (max-width: 1300px) {\\n    display: block;\\n  }\\n\"])));\r\nvar MobileFilterContainer = styled.div(templateObject_9 || (templateObject_9 = __makeTemplateObject([\"\\n  display: block;\\n  transition: left 1s;\\n  left: \", \";\\n  position: absolute;\\n  top: 70px;\\n  width: 100%;\\n  height: calc(100vh - 70px);\\n  background: lightgray;\\n\"], [\"\\n  display: block;\\n  transition: left 1s;\\n  left: \", \";\\n  position: absolute;\\n  top: 70px;\\n  width: 100%;\\n  height: calc(100vh - 70px);\\n  background: lightgray;\\n\"])), function (_a) {\r\n    var left = _a.left;\r\n    return left;\r\n});\r\nvar MobileButtonContainer = styled.div(templateObject_10 || (templateObject_10 = __makeTemplateObject([\"\\n  width: 100%;\\n  position: absolute;\\n  bottom: 0;\\n\"], [\"\\n  width: 100%;\\n  position: absolute;\\n  bottom: 0;\\n\"])));\r\nvar MobileButton = styled.button(templateObject_11 || (templateObject_11 = __makeTemplateObject([\"\\n  width: 100%;\\n  height: 40px;\\n\"], [\"\\n  width: 100%;\\n  height: 40px;\\n\"])));\r\nexport var SearchBar = function (_a) {\r\n    var pokemons = _a.pokemons, onUpdatePokemons = _a.onUpdatePokemons;\r\n    var _b = React.useState(''), name = _b[0], setName = _b[1];\r\n    var _c = React.useState('id'), sortBy = _c[0], setSortBy = _c[1];\r\n    var _d = React.useState(1), order = _d[0], setOrder = _d[1];\r\n    var _e = React.useState(Array.from(pokemons)), currPokemons = _e[0], setCurrPokemons = _e[1];\r\n    var _f = React.useState({ display: 'none', left: '100%' }), mobileFilter = _f[0], setMobileFilter = _f[1];\r\n    var handleSearch = function () {\r\n        var filteredPokemons = pokemons.filter(function (pokemon) { return pokemon.name.toLowerCase().indexOf(name.toLowerCase()) !== -1; });\r\n        setCurrPokemons(filteredPokemons);\r\n        onUpdatePokemons(filteredPokemons);\r\n        return new Promise(function (resolve) {\r\n            return resolve(filteredPokemons);\r\n        });\r\n    };\r\n    var handleSort = function (pokemonsToSort) {\r\n        var sortedPokemon = Array.from(pokemonsToSort.sort(function (a, b) { return (a[sortBy] > b[sortBy] ? 1 * order : -1 * order); }));\r\n        onUpdatePokemons(sortedPokemon);\r\n    };\r\n    var resetPokemon = function () {\r\n        onUpdatePokemons(pokemons);\r\n        setName('');\r\n        setSortBy('id');\r\n        setOrder(1);\r\n    };\r\n    var handleApplyAll = function () {\r\n        handleSearch().then(function (filteredPokemons) { return handleSort(filteredPokemons); });\r\n        closeMobileMenu();\r\n    };\r\n    var closeMobileMenu = function () {\r\n        setMobileFilter({ display: 'none', left: '100%' });\r\n    };\r\n    var Filters = (React.createElement(React.Fragment, null,\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"pokemon_name\" }, \"Name\"),\r\n            React.createElement(\"input\", { type: \"text\", id: \"pokemon_name\", value: name, onChange: function (e) { return setName(e.currentTarget.value); } }),\r\n            mobileFilter.display === 'none' && React.createElement(\"button\", { onClick: handleSearch }, \"Search\")),\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"sort_by\" }, \"Sort By\"),\r\n            React.createElement(\"select\", { id: \"sort_by\", value: sortBy, onChange: function (e) { return setSortBy(e.currentTarget.value); } },\r\n                React.createElement(\"option\", { value: \"id\" }, \"ID\"),\r\n                React.createElement(\"option\", { value: \"name\" }, \"Name\"),\r\n                React.createElement(\"option\", { value: \"maxHP\" }, \"Hit Points\"),\r\n                React.createElement(\"option\", { value: \"maxCP\" }, \"Combat Points\"))),\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"order\" }, \"Order\"),\r\n            React.createElement(\"select\", { id: \"order\", value: order, onChange: function (e) { return setOrder(parseInt(e.currentTarget.value, 10)); } },\r\n                React.createElement(\"option\", { value: 1 }, \"Ascending\"),\r\n                React.createElement(\"option\", { value: -1 }, \"Descending\")),\r\n            mobileFilter.display === 'none' && React.createElement(\"button\", { onClick: function () { return handleSort(currPokemons); } }, \"Sort\"))));\r\n    return (React.createElement(Header, null,\r\n        React.createElement(Logo, null,\r\n            React.createElement(LogoImage, { src: \"https://icon-library.net/images/pokemon-pokeball-icon/pokemon-pokeball-icon-6.jpg\" }),\r\n            React.createElement(LogoText, null, \"Ketchum's Collection\")),\r\n        React.createElement(FilterContainer, null,\r\n            Filters,\r\n            React.createElement(Filter, null,\r\n                React.createElement(\"button\", { onClick: resetPokemon }, \"Reset\"))),\r\n        React.createElement(MobileFilterToggle, { role: \"button\", src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Hamburger_icon.svg/1200px-Hamburger_icon.svg.png\", onClick: function () { return setMobileFilter({ display: 'flex', left: '0' }); } }),\r\n        React.createElement(MobileFilterContainer, __assign({}, mobileFilter),\r\n            Filters,\r\n            React.createElement(MobileButtonContainer, null,\r\n                React.createElement(MobileButton, { onClick: handleApplyAll }, \"Apply All\"),\r\n                React.createElement(MobileButton, { onClick: resetPokemon }, \"Reset\"),\r\n                React.createElement(MobileButton, { onClick: closeMobileMenu }, \"Close Menu\")))));\r\n};\r\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11;\r\n",{"version":3,"file":"D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx","sourceRoot":"","sources":["D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Pokemon } from '../PokemonContainer';\r\n\r\nconst Header = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100vw;\r\n  background-color: #ffde00;\r\n  height: 70px;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  position: absolute;\r\n  height: 70px;\r\n  left: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst LogoImage = styled.img`\r\n  height: 60px;\r\n  width: 60px;\r\n`;\r\n\r\nconst LogoText = styled.span`\r\n  font-family: 'Proza sans-serif';\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  padding: 0 5px;\r\n\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  right: 25px;\r\n\r\n  @media (max-width: 1300px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Filter = styled.div`\r\n  margin-left: 15px;\r\n  display: flex;\r\n\r\n  @media (max-width: 1300px) {\r\n    display: grid;\r\n    grid-template-columns: minmax(80px, 120px) minmax(100px, 300px);\r\n    grid-gap: 10px;\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nconst FilterLabel = styled.label`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst MobileFilterToggle = styled.img`\r\n  display: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 25px;\r\n  height: 50px;\r\n  width: 50px;\r\n  pointer: cursor;\r\n\r\n  @media (max-width: 1300px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface MobileFilter {\r\n  display: string;\r\n  left: string;\r\n}\r\n\r\nconst MobileFilterContainer = styled.div<MobileFilter>`\r\n  display: block;\r\n  transition: left 1s;\r\n  left: ${({ left }) => left};\r\n  position: absolute;\r\n  top: 70px;\r\n  width: 100%;\r\n  height: calc(100vh - 70px);\r\n  background: lightgray;\r\n`;\r\n\r\nconst MobileButtonContainer = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst MobileButton = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n`;\r\n\r\ninterface SearchBarProps {\r\n  pokemons: Pokemon[];\r\n  onUpdatePokemons: (pokemons: Pokemon[]) => void;\r\n}\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ pokemons, onUpdatePokemons }) => {\r\n  const [name, setName] = React.useState<string>('');\r\n  const [sortBy, setSortBy] = React.useState<string>('id');\r\n  const [order, setOrder] = React.useState<number>(1); // 1 for asc, -1 for desc\r\n  const [currPokemons, setCurrPokemons] = React.useState<Pokemon[]>(Array.from(pokemons));\r\n  const [mobileFilter, setMobileFilter] = React.useState<MobileFilter>({ display: 'none', left: '100%' });\r\n\r\n  const handleSearch = (): Promise<Pokemon[]> => {\r\n    const filteredPokemons = pokemons.filter(pokemon => pokemon.name.toLowerCase().indexOf(name.toLowerCase()) !== -1);\r\n    setCurrPokemons(filteredPokemons);\r\n    onUpdatePokemons(filteredPokemons);\r\n    return new Promise<Pokemon[]>(resolve => {\r\n      return resolve(filteredPokemons);\r\n    });\r\n  };\r\n\r\n  const handleSort = (pokemonsToSort: Pokemon[]) => {\r\n    const sortedPokemon = Array.from(pokemonsToSort.sort((a, b) => (a[sortBy] > b[sortBy] ? 1 * order : -1 * order)));\r\n    onUpdatePokemons(sortedPokemon);\r\n  };\r\n\r\n  const resetPokemon = () => {\r\n    onUpdatePokemons(pokemons);\r\n    setName('');\r\n    setSortBy('id');\r\n    setOrder(1);\r\n  };\r\n\r\n  const handleApplyAll = () => {\r\n    handleSearch().then(filteredPokemons => handleSort(filteredPokemons));\r\n    closeMobileMenu();\r\n  };\r\n\r\n  const closeMobileMenu = () => {\r\n    setMobileFilter({ display: 'none', left: '100%' });\r\n  };\r\n\r\n  const Filters = (\r\n    <React.Fragment>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"pokemon_name\">Name</FilterLabel>\r\n        <input type=\"text\" id=\"pokemon_name\" value={name} onChange={e => setName(e.currentTarget.value)} />\r\n        {mobileFilter.display === 'none' && <button onClick={handleSearch}>Search</button>}\r\n      </Filter>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"sort_by\">Sort By</FilterLabel>\r\n        <select id=\"sort_by\" value={sortBy} onChange={e => setSortBy(e.currentTarget.value)}>\r\n          <option value=\"id\">ID</option>\r\n          <option value=\"name\">Name</option>\r\n          <option value=\"maxHP\">Hit Points</option>\r\n          <option value=\"maxCP\">Combat Points</option>\r\n        </select>\r\n      </Filter>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"order\">Order</FilterLabel>\r\n        <select id=\"order\" value={order} onChange={e => setOrder(parseInt(e.currentTarget.value, 10))}>\r\n          <option value={1}>Ascending</option>\r\n          <option value={-1}>Descending</option>\r\n        </select>\r\n        {mobileFilter.display === 'none' && <button onClick={() => handleSort(currPokemons)}>Sort</button>}\r\n      </Filter>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Header>\r\n      <Logo>\r\n        <LogoImage src=\"https://icon-library.net/images/pokemon-pokeball-icon/pokemon-pokeball-icon-6.jpg\" />\r\n        <LogoText>Ketchum's Collection</LogoText>\r\n      </Logo>\r\n      <FilterContainer>\r\n        {Filters}\r\n        <Filter>\r\n          <button onClick={resetPokemon}>Reset</button>\r\n        </Filter>\r\n      </FilterContainer>\r\n      <MobileFilterToggle\r\n        role=\"button\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Hamburger_icon.svg/1200px-Hamburger_icon.svg.png\"\r\n        onClick={() => setMobileFilter({ display: 'flex', left: '0' })}\r\n      />\r\n      <MobileFilterContainer {...mobileFilter}>\r\n        {Filters}\r\n        <MobileButtonContainer>\r\n          <MobileButton onClick={handleApplyAll}>Apply All</MobileButton>\r\n          <MobileButton onClick={resetPokemon}>Reset</MobileButton>\r\n          <MobileButton onClick={closeMobileMenu}>Close Menu</MobileButton>\r\n        </MobileButtonContainer>\r\n      </MobileFilterContainer>\r\n    </Header>\r\n  );\r\n};\r\n"]}]}