{"remainingRequest":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js??ref--16-1!D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx","dependencies":[{"path":"D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx","mtime":1575477079863},{"path":"D:\\Code\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575395801878},{"path":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js","mtime":1550204131511}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as React from 'react';\r\nimport { Filter, FilterContainer, FilterLabel, Header, Logo, LogoImage, LogoText, MobileButton, MobileButtonContainer, MobileFilterContainer, MobileFilterToggle } from './';\r\nexport var SearchBar = function (_a) {\r\n    var pokemons = _a.pokemons, onUpdatePokemons = _a.onUpdatePokemons;\r\n    var _b = React.useState(''), name = _b[0], setName = _b[1];\r\n    var _c = React.useState('id'), sortBy = _c[0], setSortBy = _c[1];\r\n    var _d = React.useState(1), order = _d[0], setOrder = _d[1];\r\n    var _e = React.useState(Array.from(pokemons)), currPokemons = _e[0], setCurrPokemons = _e[1];\r\n    var _f = React.useState({ display: 'none', left: '100%' }), mobileFilter = _f[0], setMobileFilter = _f[1];\r\n    var _g = React.useState(''), type = _g[0], setType = _g[1];\r\n    var handleSearch = function () {\r\n        var filteredPokemons = pokemons.filter(function (pokemon) { return pokemon.name.toLowerCase().indexOf(name.toLowerCase()) !== -1; });\r\n        console.log(filteredPokemons);\r\n        if (type) {\r\n            filteredPokemons = filteredPokemons.filter(function (pokemon) { return pokemon.types.find(function (t) { return t === type; }); });\r\n        }\r\n        setCurrPokemons(filteredPokemons);\r\n        onUpdatePokemons(filteredPokemons);\r\n        return new Promise(function (resolve) {\r\n            return resolve(filteredPokemons);\r\n        });\r\n    };\r\n    var handleSort = function (pokemonsToSort) {\r\n        var sortedPokemon = Array.from(pokemonsToSort.sort(function (a, b) { return (a[sortBy] > b[sortBy] ? 1 * order : -1 * order); }));\r\n        onUpdatePokemons(sortedPokemon);\r\n    };\r\n    var resetPokemon = function () {\r\n        onUpdatePokemons(pokemons);\r\n        setName('');\r\n        setSortBy('id');\r\n        setOrder(1);\r\n    };\r\n    var handleApplyAll = function () {\r\n        handleSearch().then(function (filteredPokemons) { return handleSort(filteredPokemons); });\r\n    };\r\n    var closeMobileMenu = function () {\r\n        setMobileFilter({ display: 'none', left: '100%' });\r\n    };\r\n    var Filters = (React.createElement(React.Fragment, null,\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"pokemon_name\" }, \"Name\"),\r\n            React.createElement(\"input\", { type: \"text\", id: \"pokemon_name\", value: name, onChange: function (e) { return setName(e.currentTarget.value); } })),\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"pokemon_type\" }, \"Type\"),\r\n            React.createElement(\"select\", { id: \"pokemon_type\", onChange: function (e) { return setType(e.currentTarget.value); } },\r\n                React.createElement(\"option\", { value: \"\" }, \"All\"),\r\n                React.createElement(\"option\", { value: \"Bug\" }, \"Bug\"),\r\n                React.createElement(\"option\", { value: \"Dark\" }, \"Dark\"),\r\n                React.createElement(\"option\", { value: \"Dragon\" }, \"Dragon\"),\r\n                React.createElement(\"option\", { value: \"Electric\" }, \"Electric\"),\r\n                React.createElement(\"option\", { value: \"Fairy\" }, \"Fairy\"),\r\n                React.createElement(\"option\", { value: \"Fighting\" }, \"Fighting\"),\r\n                React.createElement(\"option\", { value: \"Fire\" }, \"Fire\"),\r\n                React.createElement(\"option\", { value: \"Flying\" }, \"Flying\"),\r\n                React.createElement(\"option\", { value: \"Ghost\" }, \"Ghost\"),\r\n                React.createElement(\"option\", { value: \"Grass\" }, \"Grass\"),\r\n                React.createElement(\"option\", { value: \"Ground\" }, \"Ground\"),\r\n                React.createElement(\"option\", { value: \"Ice\" }, \"Ice\"),\r\n                React.createElement(\"option\", { value: \"Normal\" }, \"Normal\"),\r\n                React.createElement(\"option\", { value: \"Poison\" }, \"Poison\"),\r\n                React.createElement(\"option\", { value: \"Psychic\" }, \"Psychic\"),\r\n                React.createElement(\"option\", { value: \"Rock\" }, \"Rock\"),\r\n                React.createElement(\"option\", { value: \"Steel\" }, \"Steel\"),\r\n                React.createElement(\"option\", { value: \"Water\" }, \"Water\")),\r\n            mobileFilter.display === 'none' && React.createElement(\"button\", { onClick: handleSearch }, \"Search\")),\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"sort_by\" }, \"Sort By\"),\r\n            React.createElement(\"select\", { id: \"sort_by\", value: sortBy, onChange: function (e) { return setSortBy(e.currentTarget.value); } },\r\n                React.createElement(\"option\", { value: \"id\" }, \"ID\"),\r\n                React.createElement(\"option\", { value: \"name\" }, \"Name\"),\r\n                React.createElement(\"option\", { value: \"maxHP\" }, \"Hit Points\"),\r\n                React.createElement(\"option\", { value: \"maxCP\" }, \"Combat Points\"),\r\n                React.createElement(\"option\", { value: \"classification\" }, \"Classification\"))),\r\n        React.createElement(Filter, null,\r\n            React.createElement(FilterLabel, { htmlFor: \"order\" }, \"Order\"),\r\n            React.createElement(\"select\", { id: \"order\", value: order, onChange: function (e) { return setOrder(parseInt(e.currentTarget.value, 10)); } },\r\n                React.createElement(\"option\", { value: 1 }, \"Ascending\"),\r\n                React.createElement(\"option\", { value: -1 }, \"Descending\")),\r\n            mobileFilter.display === 'none' && React.createElement(\"button\", { onClick: function () { return handleSort(currPokemons); } }, \"Sort\"))));\r\n    return (React.createElement(Header, null,\r\n        React.createElement(Logo, null,\r\n            React.createElement(LogoImage, { src: \"https://icon-library.net/images/pokemon-pokeball-icon/pokemon-pokeball-icon-6.jpg\" }),\r\n            React.createElement(LogoText, null,\r\n                React.createElement(\"span\", null, \"Ketchum's\\u00A0\"),\r\n                React.createElement(\"span\", null, \"Collection\"))),\r\n        React.createElement(FilterContainer, null,\r\n            Filters,\r\n            React.createElement(Filter, null,\r\n                React.createElement(\"button\", { onClick: resetPokemon }, \"Reset\"))),\r\n        React.createElement(MobileFilterToggle, { role: \"button\", src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Hamburger_icon.svg/1200px-Hamburger_icon.svg.png\", onClick: function () { return setMobileFilter({ display: 'flex', left: '0' }); } }),\r\n        React.createElement(MobileFilterContainer, __assign({}, mobileFilter),\r\n            Filters,\r\n            React.createElement(MobileButtonContainer, null,\r\n                React.createElement(MobileButton, { onClick: handleApplyAll }, \"Apply All\"),\r\n                React.createElement(MobileButton, { onClick: resetPokemon }, \"Reset\"),\r\n                React.createElement(MobileButton, { onClick: closeMobileMenu }, \"Close Menu\")))));\r\n};\r\n",{"version":3,"file":"D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx","sourceRoot":"","sources":["D:\\Code\\pokemon\\src\\SearchBar\\SearchBar.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EACL,MAAM,EACN,eAAe,EACf,WAAW,EACX,MAAM,EACN,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,qBAAqB,EAErB,qBAAqB,EACrB,kBAAkB,EACnB,MAAM,IAAI,CAAC;AAOZ,MAAM,CAAC,IAAM,SAAS,GAA6B,UAAC,EAA8B;QAA5B,sBAAQ,EAAE,sCAAgB;IACxE,IAAA,uBAA4C,EAA3C,YAAI,EAAE,eAAqC,CAAC;IAC7C,IAAA,yBAAkD,EAAjD,cAAM,EAAE,iBAAyC,CAAC;IACnD,IAAA,sBAA6C,EAA5C,aAAK,EAAE,gBAAqC,CAAC;IAC9C,IAAA,yCAAiF,EAAhF,oBAAY,EAAE,uBAAkE,CAAC;IAClF,IAAA,sDAAiG,EAAhG,oBAAY,EAAE,uBAAkF,CAAC;IAClG,IAAA,uBAA4C,EAA3C,YAAI,EAAE,eAAqC,CAAC;IAEnD,IAAM,YAAY,GAAG;QACnB,IAAI,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAA7D,CAA6D,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,IAAI,EAAE;YACR,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,IAAI,EAAV,CAAU,CAAC,EAAnC,CAAmC,CAAC,CAAC;SAC5F;QACD,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAClC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACnC,OAAO,IAAI,OAAO,CAAY,UAAA,OAAO;YACnC,OAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAM,UAAU,GAAG,UAAC,cAAyB;QAC3C,IAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAhD,CAAgD,CAAC,CAAC,CAAC;QAClH,gBAAgB,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,IAAM,YAAY,GAAG;QACnB,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,EAAE,CAAC,CAAC;QACZ,SAAS,CAAC,IAAI,CAAC,CAAC;QAChB,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG;QACrB,YAAY,EAAE,CAAC,IAAI,CAAC,UAAA,gBAAgB,IAAI,OAAA,UAAU,CAAC,gBAAgB,CAAC,EAA5B,CAA4B,CAAC,CAAC;IACxE,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG;QACtB,eAAe,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC;IAEF,IAAM,OAAO,GAAG,CACd,oBAAC,KAAK,CAAC,QAAQ;QACb,oBAAC,MAAM;YACL,oBAAC,WAAW,IAAC,OAAO,EAAC,cAAc,WAAmB;YACtD,+BAAO,IAAI,EAAC,MAAM,EAAC,EAAE,EAAC,cAAc,EAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAA9B,CAA8B,GAAI,CAC5F;QACT,oBAAC,MAAM;YACL,oBAAC,WAAW,IAAC,OAAO,EAAC,cAAc,WAAmB;YACtD,gCAAQ,EAAE,EAAC,cAAc,EAAC,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAA9B,CAA8B;gBACrE,gCAAQ,KAAK,EAAC,EAAE,UAAa;gBAC7B,gCAAQ,KAAK,EAAC,KAAK,UAAa;gBAChC,gCAAQ,KAAK,EAAC,MAAM,WAAc;gBAClC,gCAAQ,KAAK,EAAC,QAAQ,aAAgB;gBACtC,gCAAQ,KAAK,EAAC,UAAU,eAAkB;gBAC1C,gCAAQ,KAAK,EAAC,OAAO,YAAe;gBACpC,gCAAQ,KAAK,EAAC,UAAU,eAAkB;gBAC1C,gCAAQ,KAAK,EAAC,MAAM,WAAc;gBAClC,gCAAQ,KAAK,EAAC,QAAQ,aAAgB;gBACtC,gCAAQ,KAAK,EAAC,OAAO,YAAe;gBACpC,gCAAQ,KAAK,EAAC,OAAO,YAAe;gBACpC,gCAAQ,KAAK,EAAC,QAAQ,aAAgB;gBACtC,gCAAQ,KAAK,EAAC,KAAK,UAAa;gBAChC,gCAAQ,KAAK,EAAC,QAAQ,aAAgB;gBACtC,gCAAQ,KAAK,EAAC,QAAQ,aAAgB;gBACtC,gCAAQ,KAAK,EAAC,SAAS,cAAiB;gBACxC,gCAAQ,KAAK,EAAC,MAAM,WAAc;gBAClC,gCAAQ,KAAK,EAAC,OAAO,YAAe;gBACpC,gCAAQ,KAAK,EAAC,OAAO,YAAe,CAC7B;YACR,YAAY,CAAC,OAAO,KAAK,MAAM,IAAI,gCAAQ,OAAO,EAAE,YAAY,aAAiB,CAC3E;QACT,oBAAC,MAAM;YACL,oBAAC,WAAW,IAAC,OAAO,EAAC,SAAS,cAAsB;YACpD,gCAAQ,EAAE,EAAC,SAAS,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,SAAS,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAhC,CAAgC;gBACjF,gCAAQ,KAAK,EAAC,IAAI,SAAY;gBAC9B,gCAAQ,KAAK,EAAC,MAAM,WAAc;gBAClC,gCAAQ,KAAK,EAAC,OAAO,iBAAoB;gBACzC,gCAAQ,KAAK,EAAC,OAAO,oBAAuB;gBAC5C,gCAAQ,KAAK,EAAC,gBAAgB,qBAAwB,CAC/C,CACF;QACT,oBAAC,MAAM;YACL,oBAAC,WAAW,IAAC,OAAO,EAAC,OAAO,YAAoB;YAChD,gCAAQ,EAAE,EAAC,OAAO,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAA7C,CAA6C;gBAC3F,gCAAQ,KAAK,EAAE,CAAC,gBAAoB;gBACpC,gCAAQ,KAAK,EAAE,CAAC,CAAC,iBAAqB,CAC/B;YACR,YAAY,CAAC,OAAO,KAAK,MAAM,IAAI,gCAAQ,OAAO,EAAE,cAAM,OAAA,UAAU,CAAC,YAAY,CAAC,EAAxB,CAAwB,WAAe,CAC3F,CACM,CAClB,CAAC;IAEF,OAAO,CACL,oBAAC,MAAM;QACL,oBAAC,IAAI;YACH,oBAAC,SAAS,IAAC,GAAG,EAAC,mFAAmF,GAAG;YACrG,oBAAC,QAAQ;gBACP,oDAA4B;gBAC5B,+CAAuB,CACd,CACN;QACP,oBAAC,eAAe;YACb,OAAO;YACR,oBAAC,MAAM;gBACL,gCAAQ,OAAO,EAAE,YAAY,YAAgB,CACtC,CACO;QAClB,oBAAC,kBAAkB,IACjB,IAAI,EAAC,QAAQ,EACb,GAAG,EAAC,4GAA4G,EAChH,OAAO,EAAE,cAAM,OAAA,eAAe,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAA/C,CAA+C,GAC9D;QACF,oBAAC,qBAAqB,eAAK,YAAY;YACpC,OAAO;YACR,oBAAC,qBAAqB;gBACpB,oBAAC,YAAY,IAAC,OAAO,EAAE,cAAc,gBAA0B;gBAC/D,oBAAC,YAAY,IAAC,OAAO,EAAE,YAAY,YAAsB;gBACzD,oBAAC,YAAY,IAAC,OAAO,EAAE,eAAe,iBAA2B,CAC3C,CACF,CACjB,CACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { Pokemon } from '../PokemonContainer';\r\nimport {\r\n  Filter,\r\n  FilterContainer,\r\n  FilterLabel,\r\n  Header,\r\n  Logo,\r\n  LogoImage,\r\n  LogoText,\r\n  MobileButton,\r\n  MobileButtonContainer,\r\n  MobileFilter,\r\n  MobileFilterContainer,\r\n  MobileFilterToggle\r\n} from './';\r\n\r\ninterface SearchBarProps {\r\n  pokemons: Pokemon[];\r\n  onUpdatePokemons: (pokemons: Pokemon[]) => void;\r\n}\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ pokemons, onUpdatePokemons }) => {\r\n  const [name, setName] = React.useState<string>('');\r\n  const [sortBy, setSortBy] = React.useState<string>('id');\r\n  const [order, setOrder] = React.useState<number>(1); // 1 for asc, -1 for desc\r\n  const [currPokemons, setCurrPokemons] = React.useState<Pokemon[]>(Array.from(pokemons));\r\n  const [mobileFilter, setMobileFilter] = React.useState<MobileFilter>({ display: 'none', left: '100%' });\r\n  const [type, setType] = React.useState<string>('');\r\n\r\n  const handleSearch = (): Promise<Pokemon[]> => {\r\n    let filteredPokemons = pokemons.filter(pokemon => pokemon.name.toLowerCase().indexOf(name.toLowerCase()) !== -1);\r\n    console.log(filteredPokemons);\r\n    if (type) {\r\n      filteredPokemons = filteredPokemons.filter(pokemon => pokemon.types.find(t => t === type));\r\n    }\r\n    setCurrPokemons(filteredPokemons);\r\n    onUpdatePokemons(filteredPokemons);\r\n    return new Promise<Pokemon[]>(resolve => {\r\n      return resolve(filteredPokemons);\r\n    });\r\n  };\r\n\r\n  const handleSort = (pokemonsToSort: Pokemon[]) => {\r\n    const sortedPokemon = Array.from(pokemonsToSort.sort((a, b) => (a[sortBy] > b[sortBy] ? 1 * order : -1 * order)));\r\n    onUpdatePokemons(sortedPokemon);\r\n  };\r\n\r\n  const resetPokemon = () => {\r\n    onUpdatePokemons(pokemons);\r\n    setName('');\r\n    setSortBy('id');\r\n    setOrder(1);\r\n  };\r\n\r\n  const handleApplyAll = () => {\r\n    handleSearch().then(filteredPokemons => handleSort(filteredPokemons));\r\n  };\r\n\r\n  const closeMobileMenu = () => {\r\n    setMobileFilter({ display: 'none', left: '100%' });\r\n  };\r\n\r\n  const Filters = (\r\n    <React.Fragment>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"pokemon_name\">Name</FilterLabel>\r\n        <input type=\"text\" id=\"pokemon_name\" value={name} onChange={e => setName(e.currentTarget.value)} />\r\n      </Filter>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"pokemon_type\">Type</FilterLabel>\r\n        <select id=\"pokemon_type\" onChange={e => setType(e.currentTarget.value)}>\r\n          <option value=\"\">All</option>\r\n          <option value=\"Bug\">Bug</option>\r\n          <option value=\"Dark\">Dark</option>\r\n          <option value=\"Dragon\">Dragon</option>\r\n          <option value=\"Electric\">Electric</option>\r\n          <option value=\"Fairy\">Fairy</option>\r\n          <option value=\"Fighting\">Fighting</option>\r\n          <option value=\"Fire\">Fire</option>\r\n          <option value=\"Flying\">Flying</option>\r\n          <option value=\"Ghost\">Ghost</option>\r\n          <option value=\"Grass\">Grass</option>\r\n          <option value=\"Ground\">Ground</option>\r\n          <option value=\"Ice\">Ice</option>\r\n          <option value=\"Normal\">Normal</option>\r\n          <option value=\"Poison\">Poison</option>\r\n          <option value=\"Psychic\">Psychic</option>\r\n          <option value=\"Rock\">Rock</option>\r\n          <option value=\"Steel\">Steel</option>\r\n          <option value=\"Water\">Water</option>\r\n        </select>\r\n        {mobileFilter.display === 'none' && <button onClick={handleSearch}>Search</button>}\r\n      </Filter>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"sort_by\">Sort By</FilterLabel>\r\n        <select id=\"sort_by\" value={sortBy} onChange={e => setSortBy(e.currentTarget.value)}>\r\n          <option value=\"id\">ID</option>\r\n          <option value=\"name\">Name</option>\r\n          <option value=\"maxHP\">Hit Points</option>\r\n          <option value=\"maxCP\">Combat Points</option>\r\n          <option value=\"classification\">Classification</option>\r\n        </select>\r\n      </Filter>\r\n      <Filter>\r\n        <FilterLabel htmlFor=\"order\">Order</FilterLabel>\r\n        <select id=\"order\" value={order} onChange={e => setOrder(parseInt(e.currentTarget.value, 10))}>\r\n          <option value={1}>Ascending</option>\r\n          <option value={-1}>Descending</option>\r\n        </select>\r\n        {mobileFilter.display === 'none' && <button onClick={() => handleSort(currPokemons)}>Sort</button>}\r\n      </Filter>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Header>\r\n      <Logo>\r\n        <LogoImage src=\"https://icon-library.net/images/pokemon-pokeball-icon/pokemon-pokeball-icon-6.jpg\" />\r\n        <LogoText>\r\n          <span>Ketchum's&nbsp;</span>\r\n          <span>Collection</span>\r\n        </LogoText>\r\n      </Logo>\r\n      <FilterContainer>\r\n        {Filters}\r\n        <Filter>\r\n          <button onClick={resetPokemon}>Reset</button>\r\n        </Filter>\r\n      </FilterContainer>\r\n      <MobileFilterToggle\r\n        role=\"button\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Hamburger_icon.svg/1200px-Hamburger_icon.svg.png\"\r\n        onClick={() => setMobileFilter({ display: 'flex', left: '0' })}\r\n      />\r\n      <MobileFilterContainer {...mobileFilter}>\r\n        {Filters}\r\n        <MobileButtonContainer>\r\n          <MobileButton onClick={handleApplyAll}>Apply All</MobileButton>\r\n          <MobileButton onClick={resetPokemon}>Reset</MobileButton>\r\n          <MobileButton onClick={closeMobileMenu}>Close Menu</MobileButton>\r\n        </MobileButtonContainer>\r\n      </MobileFilterContainer>\r\n    </Header>\r\n  );\r\n};\r\n"]}]}