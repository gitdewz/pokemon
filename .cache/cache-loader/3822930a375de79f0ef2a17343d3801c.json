{"remainingRequest":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js??ref--16-1!D:\\Code\\pokemon\\src\\PokemonPopup\\PokemonPopup.tsx","dependencies":[{"path":"D:\\Code\\pokemon\\src\\PokemonPopup\\PokemonPopup.tsx","mtime":1575477000708},{"path":"D:\\Code\\pokemon\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1575395801878},{"path":"D:\\Code\\pokemon\\node_modules\\ts-loader\\index.js","mtime":1550204131511}],"contextDependencies":[],"result":["import * as React from 'react';\r\nimport { PokemonAttack } from '../PokemonAttack';\r\nimport { Popup, PopupHeader, StatContainer, Stat, AttackHeader, CloseImage, CloseButton } from \"./\";\r\nexport var PokemonPopup = function (_a) {\r\n    var pokemon = _a.pokemon, onClose = _a.onClose;\r\n    return (React.createElement(Popup, { image: pokemon.image },\r\n        React.createElement(PopupHeader, null,\r\n            pokemon.name,\r\n            \" Stat Sheet\"),\r\n        React.createElement(StatContainer, { key: \"pokemonstats\" },\r\n            React.createElement(Stat, { key: \"hp\" },\r\n                \"Hit Points: \",\r\n                pokemon.maxHP),\r\n            React.createElement(Stat, { key: \"cp\" },\r\n                \"Compat Power: \",\r\n                pokemon.maxCP),\r\n            React.createElement(Stat, { key: \"weight\" },\r\n                \"Weight: \",\r\n                parseFloat(pokemon.weight.minimum),\r\n                \"-\",\r\n                pokemon.weight.maximum),\r\n            React.createElement(Stat, { key: \"height\" },\r\n                \"Height: \",\r\n                parseFloat(pokemon.height.minimum),\r\n                \"-\",\r\n                pokemon.height.maximum),\r\n            React.createElement(Stat, { key: \"classification\" },\r\n                \"Classification: \",\r\n                pokemon.classification),\r\n            React.createElement(Stat, { key: \"types\" },\r\n                \"Type(s): \",\r\n                pokemon.types.map(function (type) { return type; }).join(', ')),\r\n            React.createElement(Stat, { key: \"fleerate\" },\r\n                \"Flee Rate: \",\r\n                pokemon.fleeRate),\r\n            React.createElement(Stat, { key: \"evolutions\" },\r\n                \"Evolutions:\",\r\n                ' ',\r\n                !pokemon.evolutions ? 'Fully Evolved' : pokemon.evolutions.map(function (evolution) { return evolution.name; }).join(', ')),\r\n            React.createElement(Stat, { key: \"resistance\" },\r\n                \"Resistance(s): \",\r\n                pokemon.resistant.map(function (resist) { return resist; }).join(', ')),\r\n            React.createElement(Stat, { key: \"weakness\" },\r\n                \"Weakness(es): \",\r\n                pokemon.weaknesses.map(function (weakness) { return weakness; }).join(', '))),\r\n        React.createElement(\"div\", { key: \"fastattacks\" },\r\n            React.createElement(AttackHeader, null, \"Fast Attack(s)\"),\r\n            React.createElement(StatContainer, null, pokemon.attacks.fast.map(function (attack) { return (React.createElement(PokemonAttack, { key: attack.name, attack: attack, background: \"lightgray\" })); }))),\r\n        React.createElement(\"div\", { key: \"specialattacks\" },\r\n            React.createElement(AttackHeader, null, \"Special Attack(s)\"),\r\n            React.createElement(StatContainer, null, pokemon.attacks.special.map(function (attack) { return (React.createElement(PokemonAttack, { key: attack.name, attack: attack, background: \"lightgray\" })); }))),\r\n        React.createElement(CloseImage, { src: \"https://icon-library.net/images/close-icon-png-transparent/close-icon-png-transparent-21.jpg\", onClick: onClose }),\r\n        React.createElement(CloseButton, { onClick: onClose }, \"Close Stat Sheet\")));\r\n};\r\n",{"version":3,"file":"D:\\Code\\pokemon\\src\\PokemonPopup\\PokemonPopup.tsx","sourceRoot":"","sources":["D:\\Code\\pokemon\\src\\PokemonPopup\\PokemonPopup.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,IAAI,CAAC;AAOpG,MAAM,CAAC,IAAM,YAAY,GAAgC,UAAC,EAAoB;QAAlB,oBAAO,EAAE,oBAAO;IAAO,OAAA,CACjF,oBAAC,KAAK,IAAC,KAAK,EAAE,OAAO,CAAC,KAAK;QACzB,oBAAC,WAAW;YAAE,OAAO,CAAC,IAAI;0BAA0B;QACpD,oBAAC,aAAa,IAAC,GAAG,EAAC,cAAc;YAC/B,oBAAC,IAAI,IAAC,GAAG,EAAC,IAAI;;gBAAc,OAAO,CAAC,KAAK,CAAQ;YACjD,oBAAC,IAAI,IAAC,GAAG,EAAC,IAAI;;gBAAgB,OAAO,CAAC,KAAK,CAAQ;YACnD,oBAAC,IAAI,IAAC,GAAG,EAAC,QAAQ;;gBACP,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;;gBAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAC/D;YACP,oBAAC,IAAI,IAAC,GAAG,EAAC,QAAQ;;gBACP,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;;gBAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAC/D;YACP,oBAAC,IAAI,IAAC,GAAG,EAAC,gBAAgB;;gBAAkB,OAAO,CAAC,cAAc,CAAQ;YAC1E,oBAAC,IAAI,IAAC,GAAG,EAAC,OAAO;;gBAAW,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAQ;YAC9E,oBAAC,IAAI,IAAC,GAAG,EAAC,UAAU;;gBAAa,OAAO,CAAC,QAAQ,CAAQ;YACzD,oBAAC,IAAI,IAAC,GAAG,EAAC,YAAY;;gBACR,GAAG;gBACd,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,IAAI,EAAd,CAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAClG;YACP,oBAAC,IAAI,IAAC,GAAG,EAAC,YAAY;;gBAAiB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,EAAN,CAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAQ;YACjG,oBAAC,IAAI,IAAC,GAAG,EAAC,UAAU;;gBAAgB,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,EAAR,CAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAQ,CACrF;QAChB,6BAAK,GAAG,EAAC,aAAa;YACpB,oBAAC,YAAY,yBAA8B;YAC3C,oBAAC,aAAa,QACX,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,CAClC,oBAAC,aAAa,IAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAC,WAAW,GAAG,CAC3E,EAFmC,CAEnC,CAAC,CACY,CACZ;QACN,6BAAK,GAAG,EAAC,gBAAgB;YACvB,oBAAC,YAAY,4BAAiC;YAC9C,oBAAC,aAAa,QACX,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,CACrC,oBAAC,aAAa,IAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAC,WAAW,GAAG,CAC3E,EAFsC,CAEtC,CAAC,CACY,CACZ;QACN,oBAAC,UAAU,IACT,GAAG,EAAC,8FAA8F,EAClG,OAAO,EAAE,OAAO,GAChB;QACF,oBAAC,WAAW,IAAC,OAAO,EAAE,OAAO,uBAAgC,CACvD,CACT;AA5CkF,CA4ClF,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { PokemonAttack } from '../PokemonAttack';\r\nimport { Pokemon } from '../PokemonContainer';\r\nimport { Popup, PopupHeader, StatContainer, Stat, AttackHeader, CloseImage, CloseButton } from \"./\";\r\n\r\ninterface PokemonPopupProps {\r\n  pokemon: Pokemon;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const PokemonPopup: React.FC<PokemonPopupProps> = ({ pokemon, onClose }) => (\r\n  <Popup image={pokemon.image}>\r\n    <PopupHeader>{pokemon.name} Stat Sheet</PopupHeader>\r\n    <StatContainer key=\"pokemonstats\">\r\n      <Stat key=\"hp\">Hit Points: {pokemon.maxHP}</Stat>\r\n      <Stat key=\"cp\">Compat Power: {pokemon.maxCP}</Stat>\r\n      <Stat key=\"weight\">\r\n        Weight: {parseFloat(pokemon.weight.minimum)}-{pokemon.weight.maximum}\r\n      </Stat>\r\n      <Stat key=\"height\">\r\n        Height: {parseFloat(pokemon.height.minimum)}-{pokemon.height.maximum}\r\n      </Stat>\r\n      <Stat key=\"classification\">Classification: {pokemon.classification}</Stat>\r\n      <Stat key=\"types\">Type(s): {pokemon.types.map(type => type).join(', ')}</Stat>\r\n      <Stat key=\"fleerate\">Flee Rate: {pokemon.fleeRate}</Stat>\r\n      <Stat key=\"evolutions\">\r\n        Evolutions:{' '}\r\n        {!pokemon.evolutions ? 'Fully Evolved' : pokemon.evolutions.map(evolution => evolution.name).join(', ')}\r\n      </Stat>\r\n      <Stat key=\"resistance\">Resistance(s): {pokemon.resistant.map(resist => resist).join(', ')}</Stat>\r\n      <Stat key=\"weakness\">Weakness(es): {pokemon.weaknesses.map(weakness => weakness).join(', ')}</Stat>\r\n    </StatContainer>\r\n    <div key=\"fastattacks\">\r\n      <AttackHeader>Fast Attack(s)</AttackHeader>\r\n      <StatContainer>\r\n        {pokemon.attacks.fast.map(attack => (\r\n          <PokemonAttack key={attack.name} attack={attack} background=\"lightgray\" />\r\n        ))}\r\n      </StatContainer>\r\n    </div>\r\n    <div key=\"specialattacks\">\r\n      <AttackHeader>Special Attack(s)</AttackHeader>\r\n      <StatContainer>\r\n        {pokemon.attacks.special.map(attack => (\r\n          <PokemonAttack key={attack.name} attack={attack} background=\"lightgray\" />\r\n        ))}\r\n      </StatContainer>\r\n    </div>\r\n    <CloseImage\r\n      src=\"https://icon-library.net/images/close-icon-png-transparent/close-icon-png-transparent-21.jpg\"\r\n      onClick={onClose}\r\n    />\r\n    <CloseButton onClick={onClose}>Close Stat Sheet</CloseButton>\r\n  </Popup>\r\n);\r\n"]}]}